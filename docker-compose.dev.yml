version: "3.9"

services:

  db:
    image: postgres:15.5
    container_name: djshop_postgres
    restart: on-failure
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:8.0
    container_name: djshop_pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 'pg_pass'
    ports:
      - "5050:80"
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:80/misc/ping" ]
      interval: 10s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.12.9-alpine
    container_name: djshop_rabbitmq
    restart: on-failure
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    build:
      context: .
      dockerfile: docker/dev.Dockerfile
    container_name: djshop_django
    restart: on-failure
    ports:
      - "8000:8000"
    volumes:
      - ./src:/project/src
      - ./configs:/project/configs
      - static-data:/vol/web
    command: >
      sh -c "python -m src.manage wait_for_db &&
             python -m src.manage migrate &&
             python -m src.manage runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 50s

  redis:
    image: redis:7.2.3
    container_name: djshop_redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3


volumes:
    static-data:
    postgres-data:
    redis-data:

